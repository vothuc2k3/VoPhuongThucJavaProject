/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import Model.Switch;
import Lib.XDate;
import Lib.XFile;
import java.awt.Component;
import java.awt.Label;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

public class SwitchMgr extends javax.swing.JFrame {

    int id;
    DefaultTableModel dtModel;
    DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
    String filePath = "";
    String logoPath = "";
    public ArrayList<Switch> switchList;
    int currentRow = -1;

    /**
     * Creates new form CandApp
     */
    public SwitchMgr() {
        initComponents();
        initTable();
        loadCb();
        tbSwitch.setDefaultEditor(Object.class, null);
        filePath = "./src/Data/switch.dat";
        switchList = new ArrayList<>();
        boolean file = loadFile();
        if (file) {
            fillToTable();
        }
        this.setTitle("The Keebs Store");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbTypeGroup = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        deleteBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        rbClicky = new javax.swing.JRadioButton();
        rbLinear = new javax.swing.JRadioButton();
        rbTactile = new javax.swing.JRadioButton();
        txtPrice = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        cbBrand = new javax.swing.JComboBox<>();
        txtDate = new com.toedter.calendar.JDateChooser();
        priceSortHighToLowBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSwitch = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        logoPng = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        priceSortLowToHighBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(675, 491));

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        deleteBtn.setBackground(new java.awt.Color(153, 153, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(153, 153, 255));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(153, 153, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(255, 204, 153));
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        rbTypeGroup.add(rbClicky);
        rbClicky.setText("Clicky type");
        rbClicky.setActionCommand("Clicky");
        rbClicky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbClickyActionPerformed(evt);
            }
        });

        rbTypeGroup.add(rbLinear);
        rbLinear.setText("Linear type ");
        rbLinear.setActionCommand("Linear");

        rbTypeGroup.add(rbTactile);
        rbTactile.setSelected(true);
        rbTactile.setText("Tactile type");
        rbTactile.setActionCommand("Tactile");

        txtPrice.setBackground(new java.awt.Color(153, 255, 153));
        txtPrice.setFont(new java.awt.Font("Courier New", 2, 12)); // NOI18N
        txtPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPriceMousePressed(evt);
            }
        });

        txtName.setBackground(new java.awt.Color(153, 255, 153));
        txtName.setFont(new java.awt.Font("Courier New", 2, 12)); // NOI18N
        txtName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNameMousePressed(evt);
            }
        });

        cbBrand.setBackground(new java.awt.Color(153, 255, 153));
        cbBrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akko", "TTC" }));

        txtDate.setBackground(new java.awt.Color(255, 255, 153));
        txtDate.setForeground(new java.awt.Color(255, 255, 153));
        txtDate.setDateFormatString("d,MM,y");

        priceSortHighToLowBtn.setBackground(new java.awt.Color(153, 153, 255));
        priceSortHighToLowBtn.setText("Sort by price (high to low)");
        priceSortHighToLowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSortHighToLowBtnActionPerformed(evt);
            }
        });

        tbSwitch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbSwitchMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbSwitch);

        jPanel2.setBackground(new java.awt.Color(189, 255, 127));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new java.awt.BorderLayout());

        logoPng.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoPng.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data/storeLogo.jpeg"))); // NOI18N
        jPanel2.add(logoPng, java.awt.BorderLayout.CENTER);

        jLabel1.setBackground(new java.awt.Color(189, 255, 127));
        jLabel1.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("The Keebs Store");
        jPanel2.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jLabel2.setFont(new java.awt.Font("Courier New", 2, 12)); // NOI18N
        jLabel2.setText("Input the manufacturing date");

        jLabel3.setFont(new java.awt.Font("Courier New", 2, 12)); // NOI18N
        jLabel3.setText("Choose type of new switch");

        jLabel4.setFont(new java.awt.Font("Courier New", 2, 12)); // NOI18N
        jLabel4.setText("Choose brand of new switch");

        priceSortLowToHighBtn.setBackground(new java.awt.Color(153, 153, 255));
        priceSortLowToHighBtn.setText("Sort by price (low to high)");
        priceSortLowToHighBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSortLowToHighBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Courier New", 2, 12)); // NOI18N
        jLabel5.setText("Enter the name of switch");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbLinear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(rbClicky, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rbTactile, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(75, 75, 75)))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(priceSortLowToHighBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(priceSortHighToLowBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbTactile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbClicky)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbLinear))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addBtn)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceSortHighToLowBtn)
                    .addComponent(refreshBtn)
                    .addComponent(priceSortLowToHighBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:

        if (addSwitch() == true) {
            fillToTable();
            saveFile();
        };


    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        deleteSwitch();
        fillToTable();
        saveFile();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        updateSwitch();
        fillToTable();
        saveFile();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        txtName.setText("");
        txtPrice.setText("");
        rbTypeGroup.clearSelection();
        cbBrand.setSelectedItem(0);
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void tbSwitchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSwitchMousePressed
        // TODO add your handling code here:
        currentRow = tbSwitch.getSelectedRow();
        showDetail(currentRow);
    }//GEN-LAST:event_tbSwitchMousePressed

    private void priceSortHighToLowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSortHighToLowBtnActionPerformed
        // TODO add your handling code here:
        sortBySwitchPriceFromHighToLow();
        fillToTable();
    }//GEN-LAST:event_priceSortHighToLowBtnActionPerformed

    private void txtNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNameMousePressed
        // TODO add your handling code here:
        if (txtName.getText().equals("Enter new switch name here")) {
            txtName.setText(null);
        }
    }//GEN-LAST:event_txtNameMousePressed

    private void rbClickyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbClickyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbClickyActionPerformed

    private void txtPriceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPriceMousePressed
        // TODO add your handling code here:
        if (txtPrice.getText().equals("Enter price of the switch here")) {
            txtPrice.setText(null);
        }
    }//GEN-LAST:event_txtPriceMousePressed

    private void priceSortLowToHighBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSortLowToHighBtnActionPerformed
        // TODO add your handling code here:
        sortBySwitchPriceFromLowToHigh();
        fillToTable();
    }//GEN-LAST:event_priceSortLowToHighBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwitchMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwitchMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwitchMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwitchMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SwitchMgr().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbBrand;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoPng;
    private javax.swing.JButton priceSortHighToLowBtn;
    private javax.swing.JButton priceSortLowToHighBtn;
    private javax.swing.JRadioButton rbClicky;
    private javax.swing.JRadioButton rbLinear;
    private javax.swing.JRadioButton rbTactile;
    private javax.swing.ButtonGroup rbTypeGroup;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTable tbSwitch;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    //Initialize the table
    private void initTable() {
        String[] columnNames = {"ID", "Type", "Brand", "Name", "Price", "MFG"};
        dtModel = new DefaultTableModel(columnNames, 0);
        tbSwitch.setModel(dtModel);
    }

    //Load the brand Combobox
    private void loadCb() {
        String[] brand = {"AKKO", "TTC", "Outemu", "Gateron", "KTT"};
        for (String s : brand) {
            cbModel.addElement(s);
        }
        cbBrand.setModel(cbModel);
    }

    //Load the file from the file path
    private boolean loadFile() {
        if (XFile.readObject(filePath) == null) {
            return false;
        }
        switchList = (ArrayList<Switch>) XFile.readObject(filePath);
        return true;
    }

    //Show message
    private void showMessage(String mess) {
        JOptionPane.showMessageDialog(this, mess);
    }

    private void fillToTable() {
        dtModel.setRowCount(0);
        for (Switch switch1 : switchList) {
            Object[] row = new Object[]{switch1.getId(), switch1.getType(), switch1.getBrand(), switch1.getName(), switch1.getPrice(), switch1.getMfg()};
            dtModel.addRow(row);
        }
    }

    private boolean addSwitch() {
        for (Switch s : switchList) {
            if (s.getId() >= id) {
                id = s.getId() + 1;
            }
        }

        String name = "";
        if (!txtName.getText().equals(name)) {
            name = txtName.getText();
        } else {
            showMessage("Please input switch name");
            return false;
        }

        String type = "";
        type = rbTypeGroup.getSelection().getActionCommand();

        int price = 0;
        if (txtPrice.getText() != null && txtPrice.getText().matches("^[0-9]{4}$")) {
            price = Integer.parseInt(txtPrice.getText());
        } else {
            showMessage("You did not input the price properly");
            return false;
        }

        String brand = cbBrand.getSelectedItem().toString();

        String mfgString = "";
        if (txtDate.getDate() != null) {
            mfgString = XDate.DateToString(txtDate.getDate());
        } else {
            showMessage("You did not input the MFG date");
            return false;
        }

        Switch s = new Switch(id, name, type, brand, price, mfgString);
        switchList.add(s);
        return true;
    }

    private void saveFile() {
        XFile.writeObject(filePath, switchList);
    }

    private void showDetail(int currentRow) {
        String type = (String) tbSwitch.getValueAt(currentRow, 1);
        setBtnGroup(type);

        String brand = (String) tbSwitch.getValueAt(currentRow, 2);
        cbBrand.setSelectedItem(brand);

        String name = (String) tbSwitch.getValueAt(currentRow, 3);
        txtName.setText(name);

        String price = Integer.toString((int) tbSwitch.getValueAt(currentRow, 4));
        txtPrice.setText(price);

        txtDate.setDate((Date) XDate.stringToDate((String) tbSwitch.getValueAt(currentRow, 5)));
    }

    private void setBtnGroup(String type) {
        for (Component c : jPanel1.getComponents()) {
            if (c instanceof JRadioButton) {
                JRadioButton btn = (JRadioButton) c;
                if (btn.getActionCommand().equals(type)) {
                    btn.setSelected(true);
                }
            }
        }
    }

    private void deleteSwitch() {
        int result = JOptionPane.showConfirmDialog(this,
                "Do you wanna delete this row?",
                "Exit?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            switchList.remove(currentRow);
        }
    }

    private void updateSwitch() {
        Switch s = switchList.get(currentRow);
        s.setType(rbTypeGroup.getSelection().getActionCommand());
        s.setBrand((String) cbBrand.getSelectedItem());
        s.setName(txtName.getText());
        s.setPrice(Integer.parseInt(txtPrice.getText()));
    }

    private void sortBySwitchPriceFromHighToLow() {
        Collections.sort(switchList, (Switch o1, Switch o2) -> o1.getPrice() > o2.getPrice() ? -1 : 1);
    }

    private void sortBySwitchPriceFromLowToHigh() {
        Collections.sort(switchList, (Switch o1, Switch o2) -> o1.getPrice() > o2.getPrice() ? 1 : -1);
    }



}
